============================= test session starts ==============================
platform linux -- Python 3.11.5, pytest-8.1.1, pluggy-1.4.0
rootdir: /volume1/users/rgeens/zigzag
configfile: pyproject.toml
plugins: typeguard-4.2.1
collected 20 items

tests/main/test_origin/test_ascend_like.py FFFF                          [ 20%]
tests/main/test_origin/test_edge_tpu_like.py FFFF                        [ 40%]
tests/main/test_origin/test_meta_prototype_like.py FFFF                  [ 60%]
tests/main/test_origin/test_tesla_npu_like.py FFFF                       [ 80%]
tests/main/test_origin/test_tpu_like.py FFFF                             [100%]

=================================== FAILURES ===================================
____________ test_api[zigzag/inputs/examples/workload/alexnet.onnx] ____________

workload = 'zigzag/inputs/examples/workload/alexnet.onnx'
accelerator = 'zigzag.inputs.examples.hardware.Ascend_like'
mapping = 'zigzag.inputs.examples.mapping.ascend_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_ascend_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Ascend_like.py:277: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Ascend_like.py:270: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Ascend_like.py:168: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
__________ test_api[zigzag/inputs/examples/workload/mobilenetv2.onnx] __________

workload = 'zigzag/inputs/examples/workload/mobilenetv2.onnx'
accelerator = 'zigzag.inputs.examples.hardware.Ascend_like'
mapping = 'zigzag.inputs.examples.mapping.ascend_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_ascend_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Ascend_like.py:277: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Ascend_like.py:270: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Ascend_like.py:168: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
___________ test_api[zigzag/inputs/examples/workload/resnet18.onnx] ____________

workload = 'zigzag/inputs/examples/workload/resnet18.onnx'
accelerator = 'zigzag.inputs.examples.hardware.Ascend_like'
mapping = 'zigzag.inputs.examples.mapping.ascend_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_ascend_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Ascend_like.py:277: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Ascend_like.py:270: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Ascend_like.py:168: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
______________ test_api[zigzag.inputs.examples.workload.resnet18] ______________

workload = 'zigzag.inputs.examples.workload.resnet18'
accelerator = 'zigzag.inputs.examples.hardware.Ascend_like'
mapping = 'zigzag.inputs.examples.mapping.ascend_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_ascend_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/input_parser_stages.py:39: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Ascend_like.py:277: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Ascend_like.py:270: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Ascend_like.py:168: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
____________ test_api[zigzag/inputs/examples/workload/alexnet.onnx] ____________

workload = 'zigzag/inputs/examples/workload/alexnet.onnx'
accelerator = 'zigzag.inputs.examples.hardware.Edge_TPU_like'
mapping = 'zigzag.inputs.examples.mapping.edge_tpu_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_edge_tpu_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Edge_TPU_like.py:186: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Edge_TPU_like.py:179: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Edge_TPU_like.py:102: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
__________ test_api[zigzag/inputs/examples/workload/mobilenetv2.onnx] __________

workload = 'zigzag/inputs/examples/workload/mobilenetv2.onnx'
accelerator = 'zigzag.inputs.examples.hardware.Edge_TPU_like'
mapping = 'zigzag.inputs.examples.mapping.edge_tpu_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_edge_tpu_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Edge_TPU_like.py:186: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Edge_TPU_like.py:179: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Edge_TPU_like.py:102: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
___________ test_api[zigzag/inputs/examples/workload/resnet18.onnx] ____________

workload = 'zigzag/inputs/examples/workload/resnet18.onnx'
accelerator = 'zigzag.inputs.examples.hardware.Edge_TPU_like'
mapping = 'zigzag.inputs.examples.mapping.edge_tpu_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_edge_tpu_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Edge_TPU_like.py:186: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Edge_TPU_like.py:179: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Edge_TPU_like.py:102: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
______________ test_api[zigzag.inputs.examples.workload.resnet18] ______________

workload = 'zigzag.inputs.examples.workload.resnet18'
accelerator = 'zigzag.inputs.examples.hardware.Edge_TPU_like'
mapping = 'zigzag.inputs.examples.mapping.edge_tpu_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_edge_tpu_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/input_parser_stages.py:39: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Edge_TPU_like.py:186: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Edge_TPU_like.py:179: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Edge_TPU_like.py:102: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
____________ test_api[zigzag/inputs/examples/workload/alexnet.onnx] ____________

workload = 'zigzag/inputs/examples/workload/alexnet.onnx'
accelerator = 'zigzag.inputs.examples.hardware.Meta_prototype'
mapping = 'zigzag.inputs.examples.mapping.meta_prototype_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_meta_prototype_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Meta_prototype.py:234: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Meta_prototype.py:227: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Meta_prototype.py:137: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
__________ test_api[zigzag/inputs/examples/workload/mobilenetv2.onnx] __________

workload = 'zigzag/inputs/examples/workload/mobilenetv2.onnx'
accelerator = 'zigzag.inputs.examples.hardware.Meta_prototype'
mapping = 'zigzag.inputs.examples.mapping.meta_prototype_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_meta_prototype_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Meta_prototype.py:234: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Meta_prototype.py:227: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Meta_prototype.py:137: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
___________ test_api[zigzag/inputs/examples/workload/resnet18.onnx] ____________

workload = 'zigzag/inputs/examples/workload/resnet18.onnx'
accelerator = 'zigzag.inputs.examples.hardware.Meta_prototype'
mapping = 'zigzag.inputs.examples.mapping.meta_prototype_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_meta_prototype_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Meta_prototype.py:234: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Meta_prototype.py:227: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Meta_prototype.py:137: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
______________ test_api[zigzag.inputs.examples.workload.resnet18] ______________

workload = 'zigzag.inputs.examples.workload.resnet18'
accelerator = 'zigzag.inputs.examples.hardware.Meta_prototype'
mapping = 'zigzag.inputs.examples.mapping.meta_prototype_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_meta_prototype_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/input_parser_stages.py:39: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Meta_prototype.py:234: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Meta_prototype.py:227: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Meta_prototype.py:137: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
____________ test_api[zigzag/inputs/examples/workload/alexnet.onnx] ____________

workload = 'zigzag/inputs/examples/workload/alexnet.onnx'
accelerator = 'zigzag.inputs.examples.hardware.Tesla_NPU_like'
mapping = 'zigzag.inputs.examples.mapping.tesla_npu_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_tesla_npu_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Tesla_NPU_like.py:235: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Tesla_NPU_like.py:228: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Tesla_NPU_like.py:137: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
__________ test_api[zigzag/inputs/examples/workload/mobilenetv2.onnx] __________

workload = 'zigzag/inputs/examples/workload/mobilenetv2.onnx'
accelerator = 'zigzag.inputs.examples.hardware.Tesla_NPU_like'
mapping = 'zigzag.inputs.examples.mapping.tesla_npu_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_tesla_npu_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Tesla_NPU_like.py:235: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Tesla_NPU_like.py:228: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Tesla_NPU_like.py:137: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
___________ test_api[zigzag/inputs/examples/workload/resnet18.onnx] ____________

workload = 'zigzag/inputs/examples/workload/resnet18.onnx'
accelerator = 'zigzag.inputs.examples.hardware.Tesla_NPU_like'
mapping = 'zigzag.inputs.examples.mapping.tesla_npu_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_tesla_npu_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Tesla_NPU_like.py:235: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Tesla_NPU_like.py:228: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Tesla_NPU_like.py:137: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
______________ test_api[zigzag.inputs.examples.workload.resnet18] ______________

workload = 'zigzag.inputs.examples.workload.resnet18'
accelerator = 'zigzag.inputs.examples.hardware.Tesla_NPU_like'
mapping = 'zigzag.inputs.examples.mapping.tesla_npu_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, cmes) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_tesla_npu_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/input_parser_stages.py:39: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/Tesla_NPU_like.py:235: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/Tesla_NPU_like.py:228: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/Tesla_NPU_like.py:137: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
____________ test_api[zigzag/inputs/examples/workload/alexnet.onnx] ____________

workload = 'zigzag/inputs/examples/workload/alexnet.onnx'
accelerator = 'zigzag.inputs.examples.hardware.TPU_like'
mapping = 'zigzag.inputs.examples.mapping.tpu_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, _) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_tpu_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/TPU_like.py:161: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/TPU_like.py:154: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/TPU_like.py:89: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
__________ test_api[zigzag/inputs/examples/workload/mobilenetv2.onnx] __________

workload = 'zigzag/inputs/examples/workload/mobilenetv2.onnx'
accelerator = 'zigzag.inputs.examples.hardware.TPU_like'
mapping = 'zigzag.inputs.examples.mapping.tpu_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, _) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_tpu_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/TPU_like.py:161: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/TPU_like.py:154: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/TPU_like.py:89: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
___________ test_api[zigzag/inputs/examples/workload/resnet18.onnx] ____________

workload = 'zigzag/inputs/examples/workload/resnet18.onnx'
accelerator = 'zigzag.inputs.examples.hardware.TPU_like'
mapping = 'zigzag.inputs.examples.mapping.tpu_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, _) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_tpu_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/ONNXModelParserStage.py:29: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/TPU_like.py:161: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/TPU_like.py:154: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/TPU_like.py:89: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
______________ test_api[zigzag.inputs.examples.workload.resnet18] ______________

workload = 'zigzag.inputs.examples.workload.resnet18'
accelerator = 'zigzag.inputs.examples.hardware.TPU_like'
mapping = 'zigzag.inputs.examples.mapping.tpu_like'

    @pytest.mark.parametrize("workload", workloads)
    def test_api(workload, accelerator, mapping):
>       (energy, latency, _) = get_hardware_performance_zigzag(workload, accelerator, mapping)

tests/main/test_origin/test_tpu_like.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
zigzag/api.py:90: in get_hardware_performance_zigzag
    answers = mainstage.run()
zigzag/stages/MainStage.py:17: in run
    for cme, extra_info in self.list_of_callables[0](self.list_of_callables[1:], **self.kwargs).run():
zigzag/stages/input_parser_stages.py:39: in run
    for cme, extra_info in sub_stage.run():
zigzag/stages/input_parser_stages.py:22: in run
    self.accelerator_parser.run()
zigzag/io/AcceleratorParser.py:36: in run
    accelerator = self.parse_accelerator_from_path(self.accelerator_path)
zigzag/io/AcceleratorParser.py:53: in parse_accelerator_from_path
    module = importlib.import_module(accelerator_path)
/usr/lib64/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1204: in _gcd_import
    ???
<frozen importlib._bootstrap>:1176: in _find_and_load
    ???
<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:690: in _load_unlocked
    ???
<frozen importlib._bootstrap_external>:940: in exec_module
    ???
<frozen importlib._bootstrap>:241: in _call_with_frames_removed
    ???
zigzag/inputs/examples/hardware/TPU_like.py:161: in <module>
    cores = cores_dut()
zigzag/inputs/examples/hardware/TPU_like.py:154: in cores_dut
    memory_hierarchy1 = memory_hierarchy_dut(multiplier_array1)
zigzag/inputs/examples/hardware/TPU_like.py:89: in memory_hierarchy_dut
    memory_hierarchy_graph.add_memory(
zigzag/hardware/architecture/MemoryHierarchy.py:81: in add_memory
    nb_levels_so_far = len([node for node in self.memory_nodes if mem_op in node.operands])
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
zigzag/hardware/architecture/MemoryHierarchy.py:179: in memory_nodes
    return list(self.memory_nodes)  # type: ignore
E   RecursionError: maximum recursion depth exceeded
!!! Recursion detected (same locals & position)
=========================== short test summary info ============================
FAILED tests/main/test_origin/test_ascend_like.py::test_api[zigzag/inputs/examples/workload/alexnet.onnx]
FAILED tests/main/test_origin/test_ascend_like.py::test_api[zigzag/inputs/examples/workload/mobilenetv2.onnx]
FAILED tests/main/test_origin/test_ascend_like.py::test_api[zigzag/inputs/examples/workload/resnet18.onnx]
FAILED tests/main/test_origin/test_ascend_like.py::test_api[zigzag.inputs.examples.workload.resnet18]
FAILED tests/main/test_origin/test_edge_tpu_like.py::test_api[zigzag/inputs/examples/workload/alexnet.onnx]
FAILED tests/main/test_origin/test_edge_tpu_like.py::test_api[zigzag/inputs/examples/workload/mobilenetv2.onnx]
FAILED tests/main/test_origin/test_edge_tpu_like.py::test_api[zigzag/inputs/examples/workload/resnet18.onnx]
FAILED tests/main/test_origin/test_edge_tpu_like.py::test_api[zigzag.inputs.examples.workload.resnet18]
FAILED tests/main/test_origin/test_meta_prototype_like.py::test_api[zigzag/inputs/examples/workload/alexnet.onnx]
FAILED tests/main/test_origin/test_meta_prototype_like.py::test_api[zigzag/inputs/examples/workload/mobilenetv2.onnx]
FAILED tests/main/test_origin/test_meta_prototype_like.py::test_api[zigzag/inputs/examples/workload/resnet18.onnx]
FAILED tests/main/test_origin/test_meta_prototype_like.py::test_api[zigzag.inputs.examples.workload.resnet18]
FAILED tests/main/test_origin/test_tesla_npu_like.py::test_api[zigzag/inputs/examples/workload/alexnet.onnx]
FAILED tests/main/test_origin/test_tesla_npu_like.py::test_api[zigzag/inputs/examples/workload/mobilenetv2.onnx]
FAILED tests/main/test_origin/test_tesla_npu_like.py::test_api[zigzag/inputs/examples/workload/resnet18.onnx]
FAILED tests/main/test_origin/test_tesla_npu_like.py::test_api[zigzag.inputs.examples.workload.resnet18]
FAILED tests/main/test_origin/test_tpu_like.py::test_api[zigzag/inputs/examples/workload/alexnet.onnx]
FAILED tests/main/test_origin/test_tpu_like.py::test_api[zigzag/inputs/examples/workload/mobilenetv2.onnx]
FAILED tests/main/test_origin/test_tpu_like.py::test_api[zigzag/inputs/examples/workload/resnet18.onnx]
FAILED tests/main/test_origin/test_tpu_like.py::test_api[zigzag.inputs.examples.workload.resnet18]
============================== 20 failed in 2.06s ==============================
